#include "Log.h"
#include "Data/Reader.h"
#include "Display/Grid.h"
#include "Display/Symbols.h"
#include "FlashDrive/FlashDrive.h"
#include "FPGA/FPGA.h"
#include "Hardware/FLASH.h"
#include "Hardware/Sound.h"
#include "Menu/MenuDrawing.h"
#include "Menu/MenuFunctions.h"
#include "Menu/Pages/Definition.h"
#include "Settings/SettingsDebug.h"
#include "Utils/Debug.h"
#include "Utils/Dictionary.h"
#include "Utils/GlobalFunctions.h"
#include "Utils/Math.h"
#include "Utils/StringUtils.h"
#include "Utils/CommonFunctions.h"


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
extern void LoadTShift(void);
extern const      Page pDebug;
extern const     Page ppConsole;                            ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ
extern const  Governor gConsole_NumStrings;                 ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðàçìåð øðèôòà
extern const    Choice cConsole_SizeFont;                   ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðàçìåð øðèôòà
extern const    Choice cConsole_ModeStop;                   ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðåæ. îñòàíîâà
extern const    Page pppConsole_Registers;                  ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ
extern const    Choice cConsole_Registers_ShowAll;          ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïîêàçûâàòü âñå
extern const    Choice cConsole_Registers_RD_FL;            ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - RD_FL
static bool    IsActive_Console_Registers(void);
extern const    Choice cConsole_Registers_RShiftA;          ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñì. 1ê
extern const    Choice cConsole_Registers_RShiftB;          ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñì. 2ê
extern const    Choice cConsole_Registers_TrigLev;          ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñèíõð.
extern const    Choice cConsole_Registers_RangeA;           ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÎËÜÒ/ÄÅË 1
extern const    Choice cConsole_Registers_RangeB;           ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÎËÜÒ/ÄÅË 2
extern const    Choice cConsole_Registers_TrigParam;        ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. ñèíõð.
extern const    Choice cConsole_Registers_ChanParamA;       ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. êàí. 2
extern const    Choice cConsole_Registers_ChanParamB;       ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. êàí. 2
extern const    Choice cConsole_Registers_TBase;            ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÐÅÌß/ÄÅË
extern const    Choice cConsole_Registers_TShift;           ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ò ñì.
extern const    Button bConsole_SizeSettings;               ///< ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðàçìåð íàñòðîåê
static void        Draw_Console_SizeSettings(int x, int y); 
extern const     Page ppADC;                                ///< ÎÒËÀÄÊÀ - ÀÖÏ
extern const    Page pppADC_Balance;                        ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ
extern const    Choice cADC_Balance_Mode;                   ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ðåæèì
static void   OnChanged_ADC_Balance_Mode(bool active);
static void        Draw_ADC_Balance_Mode(int x, int y);
extern const  Governor gADC_Balance_ShiftA;                 ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ñìåùåíèå 1
static bool    IsActive_ADC_Balance_ShiftAB(void);
static void   OnChanged_ADC_Balance_ShiftA(void);
extern const  Governor gADC_Balance_ShiftB;                 ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ñìåùåíèå 2 
static void   OnChanged_ADC_Balance_ShiftB(void);
extern const    Page pppADC_Stretch;                        ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ
extern const    Choice cADC_Stretch_Mode;                   ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðåæèì
       void   OnChanged_ADC_Stretch_Mode(bool active);
extern const  Governor gADC_Stretch_A;                      ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðàñòÿæêà 1ê
static bool    IsActive_ADC_StretchAB(void);
static void   OnChanged_ADC_Stretch_A(void);
extern const  Governor gADC_Stretch_B;                      ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðàñòÿæêà 2ê
static void   OnChanged_ADC_Stretch_B(void);
extern const  Governor gADC_Stretch_Ak20mV;                 ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 20ìÂ/1Â 1ê
extern const  Governor gADC_Stretch_Ak50mV;                 ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 50ìÂ 1ê 
extern const  Governor gADC_Stretch_Ak100mV;                ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 100ìÂ/5Â 1ê
extern const  Governor gADC_Stretch_Ak2V;                   ///< ÎÒËÀÄÊÀ - AÖÏ - ÐÀÑÒßÆÊÀ - 2Â 1ê
extern const  Governor gADC_Stretch_Bk20mV;                 ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 20ìÂ/1Â 2ê
extern const  Governor gADC_Stretch_Bk50mV;                 ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 50ìÂ 2ê 
extern const  Governor gADC_Stretch_Bk100mV;                ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 100ìÂ/5Â 2ê
extern const  Governor gADC_Stretch_Bk2V;                   ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 2Â 2ê
extern const    Page pppADC_Shift;                          ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ
extern const    Button bADC_Shift_Reset;                    ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñáðîñ
static void     OnPress_ADC_Shift_Reset(void);
extern const  Governor gADC_Shift_A2mV;                     ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 2ìÂ ïîñò
static void   OnChanged_ADC_Shift_A(void);
extern const  Governor gADC_Shift_B2mV;                     ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 2ìÂ ïîñò
static void   OnChanged_ADC_Shift_B(void);
extern const  Governor gADC_Shift_A5mV;                     ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 5ìÂ ïîñò
extern const  Governor gADC_Shift_B5mV;                     ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 5ìÂ ïîñò
extern const  Governor gADC_Shift_A10mV;                    ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 10ìÂ ïîñò
extern const  Governor gADC_Shift_B10mV;                    ///< ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 10ìÂ ïîñò
extern const     Page ppRand;                               ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ
extern const  Governor gRand_NumMeasures;                   ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Âûá-ê/âîðîòà
static void   OnChanged_Rand_NumMeasures(void);
extern const  Governor gRand_NumAverage;                    ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Óñðåäí.
extern const  Governor gRand_NumSmooth;                     ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñãëàæèâàíèå
extern const    Choice cRand_ShowInfo;                      ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Èíôîðìàöèÿ
extern const    Choice gRand_ShowStat;                      ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñòàòèñòèêà
extern const  Governor gRand_TimeCompensation;              ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Êîìïåíñàöèÿ çàäåðæêè
static void   OnChanged_Rand_TimeCompensation(void);
extern const  Governor gRand_AddTimeShift;                  ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñìåùåíèå
static void   OnChanged_Rand_AddTimeShift(void);
extern const  Governor gRand_Pretriggered;                  ///< ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ïðåäçàïóñê
static void   OnChanged_Rand_Pretriggered(void);
extern const     Page ppChannels;                           ///< ÎÒËÀÄÊÀ - ÊÀÍÀËÛ
extern const    Choice cChannels_BandwidthA;                ///< ÎÒËÀÄÊÀ - ÊÀÍÀËÛ - Ïîëîñà 1
static void   OnChanged_Channels_BandwidthA(bool active);
extern const    Choice cChannels_BandwidthB;                ///< ÎÒËÀÄÊÀ - ÊÀÍÀËÛ - Ïîëîñà 2
static void   OnChanged_Channels_BandwidthB(bool active);
extern const    Choice cStats;                              ///< ÎÒËÀÄÊÀ - Ñòàòèñòèêà
extern const    Choice cDisplayOrientation;                 ///< ÎÒËÀÄÊÀ - Îðèåíòàöèÿ
       void   OnChanged_DisplayOrientation(bool);
extern const    Choice cEMS;                                ///< ÎÒËÀÄÊÀ - Ðåæèì ÝÌÑ
static void   OnChanged_EMS(bool);
extern const Governor mgPred;                               ///< ÎÒËÀÄÊÀ - Ïðåäçàïóñê
static void   OnChanged_Pred(void);
extern const Governor mgPost;                               ///< ÎÒËÀÄÊÀ - Ïîñëåçàïóñê
static void   OnChanged_Post(void);
extern const     Page ppSettings;                           ///< ÎÒËÀÄÊÀ - ÍÀÑÒÐÎÉÊÈ
static void     OnPress_Settings(void);
extern const   SButton bSettings_Exit;                      ///< ÎÒËÀÄÊÀ - ÍÀÑÒÐÎÉÊÈ - Âûõîä
static void     OnPress_Settings_Exit(void);
extern const    Button bSaveFirmware;                       ///< ÎÒËÀÄÊÀ - Ñîõð. ïðîøèâêó
static bool    IsActive_SaveFirmware(void);
static void     OnPress_SaveFirmware(void);
extern const     Page ppSerialNumber;                       ///< ÎÒËÀÄÊÀ - Ñ/Í
static void     OnPress_SerialNumber(void);
static void        Draw_EnterSerialNumber(void);
static void    OnRegSet_SerialNumber(int);
extern const   SButton bSerialNumber_Exit;                  ///< ÎÒËÀÄÊÀ - Ñ/Í - Âûõîä
static void     OnPress_SerialNumber_Exit(void);
extern const   SButton bSerialNumber_Change;                ///< ÎÒËÀÄÊÀ - Ñ/Í - Ïåðåéòè
static void     OnPress_SerialNumber_Change(void);
static void        Draw_SerialNumber_Change(int, int);
extern const   SButton bSerialNumber_Save;                  ///< ÎÒËÀÄÊÀ - Ñ/Í - Ñîõðàíèòü
static void     OnPress_SerialNumber_Save(void);
static void        Draw_SerialNumber_Save(int, int);
extern const    Button bEraseData;                          ///< ÎÒËÀÄÊÀ - Ñòåðåòü äàííûå
static void     OnPress_EraseData(void);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Â ýòîé ñòðóêòóðå áóäóò õðàíèòüñÿ äàííûå ñåðèéíîãî íîìåðà ïðè îòêðûòîé ñòðàíèöå ppSerialNumer
typedef struct
{
    int number;     ///< Ñîîòâåòñòâåííî, ïîðÿäêîâûé íîìåð.
    int year;       ///< Ñîîòâåòñòâåííî, ãîä.
    int curDigt;    ///< Ñîîòâåòñòâåííî, íîìåðîì (0) èëè ãîäîì (1) óïðàâëÿåò ðó÷êà ÓÑÒÀÍÎÂÊÀ.
} StructForSN;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ ///
DEF_PAGE_13(    pDebug, ,
    Page_Debug, &mainPage, FuncActive, EmptyPressPage,
    "ÎÒËÀÄÊÀ", "DEBUG",
    "",
    "",
    ppConsole,              // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ
    ppADC,                  // ÎÒËÀÄÊÀ - ÀÖÏ
    ppRand,			        // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ
    ppChannels,		        // ÎÒËÀÄÊÀ - ÊÀÍÀËÛ
    cStats,			        // ÎÒËÀÄÊÀ - Ñòàòèñòèêà
    cDisplayOrientation,    // ÎÒËÀÄÊÀ - Îðèåíòàöèÿ
    cEMS,                   // ÎÒËÀÄÊÀ - Ðåæèì ÝÌÑ
    mgPred,			        // ÎÒËÀÄÊÀ - Ïðåäçàïóñê
    mgPost,			        // ÎÒËÀÄÊÀ - Ïîñëåçàïóñê
    ppSettings,		        // ÎÒËÀÄÊÀ - ÍÀÑÒÐÎÉÊÈ
    bSaveFirmware,          // ÎÒËÀÄÊÀ - Ñîõð. ïðîøèâêó
    ppSerialNumber,         // ÎÒËÀÄÊÀ - Ñ/Í
    bEraseData              // ÎÒËÀÄÊÀ - Ñòåðåòü äàííûå
);

const Page * pointerPageDebug = &pDebug;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ ///
DEF_PAGE_5(     ppConsole, static,
    Page_Debug_Console, &pDebug, FuncActive, EmptyPressPage,
    "ÊÎÍÑÎËÜ", "CONSOLE",
    "",
    "",
    gConsole_NumStrings,    // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ×èñëî ñòðîê
    cConsole_SizeFont,      // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðàçìåð øðèôòà
    cConsole_ModeStop,      // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðåæ. îñòàíîâà
    pppConsole_Registers,   // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ
    bConsole_SizeSettings   // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðàçìåð íàñòðîåê
);

//---------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ×èñëî ñòðîê ---
DEF_GOVERNOR
(
    gConsole_NumStrings,
    "×èñëî ñòðîê", "Number strings",
    "",
    "",
    ppConsole, CONSOLE_NUM_STRINGS, 0, 33, FuncActive, FuncChanged, FuncBeforeDraw
);

//-------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðàçìåð øðèôòà ---
DEF_CHOICE_2
(
    cConsole_SizeFont, ppConsole,
    set.dbg_SizeFont, FuncActive, FuncChangedChoice, FuncDraw,
    "Ðàçìåð øðèôòà", "Size font",
    "",
    "",
    "5", "5",
    "8", "8"    
);

//-------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðåæ. îñòàíîâà ---
DEF_CHOICE_2
(
    cConsole_ModeStop, ppConsole,
    MODE_PAUSE_CONSOLE, FuncActive, FuncChangedChoice, FuncDraw,
    "Ðåæ. îñòàíîâà", "Mode stop",
    "Ïðåäîñòàâëÿåò âîçìîæíîñòü ïðèîñòàíîâêè âûâîäà â êîíñîëü ïóò¸ì íàæàòèÿ íà êíîïêó ÏÓÑÊ/ÑÒÎÏ",
    "It provides the ability to pause the output to the console by pressing the ÏÓÑÊ/ÑÒÎÏ button",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU, ENABLE_EN
);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ ///
DEF_PAGE_12(    pppConsole_Registers, static,
    Page_Debug_Console_Registers, &ppConsole, FuncActive, EmptyPressPage,
    "ÐÅÃÈÑÒÐÛ", "REGISTERS",
    "",
    "",
    cConsole_Registers_ShowAll,     // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïîêàçûâàòü âñå
    cConsole_Registers_RD_FL,       // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - RD_FL
    cConsole_Registers_RShiftA,     // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñì. 1ê
    cConsole_Registers_RShiftB,     // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñì. 2ê
    cConsole_Registers_TrigLev,     // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñèíõð
    cConsole_Registers_RangeA,      // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÎËÜÒ/ÄÅË 1
    cConsole_Registers_RangeB,      // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÎËÜÒ/ÄÅË 2
    cConsole_Registers_TrigParam,   // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. ñèíõð.
    cConsole_Registers_ChanParamA,  // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. êàí. 1
    cConsole_Registers_ChanParamB,  // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. êàí. 2
    cConsole_Registers_TBase,       // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÐÅÌß/ÄÅË
    cConsole_Registers_TShift       // ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ò ñì.
);

//-------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïîêàçûâàòü âñå ---
DEF_CHOICE_2
(
    cConsole_Registers_ShowAll, pppConsole_Registers,
    DBG_SHOW_ALL, FuncActive, FuncChangedChoice, FuncDraw,
    "Ïîêàçûâàòü âñå", "Show all",
    "Ïîêàçûâàòü âñå çíà÷åíèÿ, çàñûëàåìûå â ðåãèñòðû",
    "To show all values transferred in registers",
    "Íåò", "No",
    "Äà",  "Yes"
);

//----------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - RD_FL ---
static bool IsActive_Console_Registers(void)
{
    return DBG_SHOW_ALL;
}

DEF_CHOICE_2
(
    cConsole_Registers_RD_FL, pppConsole_Registers,
    DBG_SHOW_FLAG, IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "RD_FL", "RD_FL",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//-------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñì. 1ê ---
DEF_CHOICE_2
(
    cConsole_Registers_RShiftA, pppConsole_Registers,
    set.dbg_ShowRShift[A], IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "U ñì. 1ê", "U shift 1ch",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//-------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñì. 2ê ---
DEF_CHOICE_2
(
    cConsole_Registers_RShiftB, pppConsole_Registers,
    set.dbg_ShowRShift[B], IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "U ñì. 2ê", "U shift 2ch",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//-------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - U ñèíõð. ---
DEF_CHOICE_2
(
    cConsole_Registers_TrigLev, pppConsole_Registers,
    set.dbg_ShowTrigLev, IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "U ñèíõð.", "U trig.",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//----------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÎËÜÒ/ÄÅË 1 ---
DEF_CHOICE_2
(
    cConsole_Registers_RangeA, pppConsole_Registers,
    set.dbg_ShowRange[A], IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "ÂÎËÜÒ/ÄÅË 1", "Range 1",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//----------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÎËÜÒ/ÄÅË 2 ---
DEF_CHOICE_2
(
    cConsole_Registers_RangeB, pppConsole_Registers,
    set.dbg_ShowRange[B], IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "ÂÎËÜÒ/ÄÅË 2", "Range 2",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//--------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. ñèíõð. ---
DEF_CHOICE_2
(
    cConsole_Registers_TrigParam, pppConsole_Registers,
    set.dbg_ShowTrigParam, IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "Ïàðàì. ñèíõð.", "Trig param",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//--------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. êàí. 2 ---
DEF_CHOICE_2
(
    cConsole_Registers_ChanParamA, pppConsole_Registers,
    set.dbg_ShowChanParam[A], IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "Ïàðàì. êàí. 1", "Chan 1 param",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//--------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ïàðàì. êàí. 2 ---
DEF_CHOICE_2
(
    cConsole_Registers_ChanParamB, pppConsole_Registers,
    set.dbg_ShowChanParam[B], IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "Ïàðàì. êàí. 2", "Chan 2 param",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU, ENABLE_EN
);

//------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - ÂÐÅÌß/ÄÅË ---
DEF_CHOICE_2
(
    cConsole_Registers_TBase, pppConsole_Registers,
    set.dbg_ShowTBase, IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "ÂÐÅÌß/ÄÅË", "TBase",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU, ENABLE_EN
);

//----------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - ÐÅÃÈÑÒÐÛ - Ò ñì. ---
DEF_CHOICE_2
(
    cConsole_Registers_TShift, pppConsole_Registers,
    set.dbg_ShowTShift, IsActive_Console_Registers, FuncChangedChoice, FuncDraw,
    "Ò ñì.", "tShift",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU, ENABLE_EN
);

//------------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÊÎÍÑÎËÜ - Ðàçìåð íàñòðîåê ---
static void Draw_Console_SizeSettings(int x, int y)
{
    char buffer[30];
    sprintf(buffer, "Ðàçì.íàñòð. %d", sizeof(Settings));
    painter.DrawText(x + 6, y + 13, buffer, gColorBack);
}

DEF_BUTTON
(
    bConsole_SizeSettings,
    "", "",
    "Ïîêàçûâàåò òåêóùèé ðàçìåð ñòðóêòóðû äëÿ ñîõðàíåíèÿ íàñòðîåê",
    "Displays the current size of the structure to save settings",
    ppConsole, FuncActive, FuncPress, Draw_Console_SizeSettings
);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÀÖÏ ///
DEF_PAGE_3(     ppADC, static,
    Page_Debug_ADC, &pDebug, FuncActive, EmptyPressPage,
    "ÀÖÏ", "ADC",
    "",
    "",
    pppADC_Balance, // ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ
    pppADC_Stretch, // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ
    pppADC_Shift    // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ ///
DEF_PAGE_3(     pppADC_Balance, static,
    Page_Debug_ADC_Balance, &ppADC, FuncActive, EmptyPressPage,
    "ÁÀËÀÍÑ", "BALANCE",
    "",
    "",
    cADC_Balance_Mode,      // ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ðåæèì
    gADC_Balance_ShiftA,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ñìåùåíèå 1
    gADC_Balance_ShiftB     // ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ñìåùåíèå 2
);

//----------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ðåæèì ---
static void OnChanged_ADC_Balance_Mode(bool)
{
    Draw_ADC_Balance_Mode(0, 0);
}

static int16 shiftADCA;
static int16 shiftADCB;

static void Draw_ADC_Balance_Mode(int, int)
{
    int8 shift[2][3] =
    {
        {0, SET_BALANCE_ADC_A, (int8)NRST_BALANCE_ADC_A},
        {0, SET_BALANCE_ADC_B, (int8)NRST_BALANCE_ADC_B}
    };

    shiftADCA = shift[A][NRST_BALANCE_ADC_TYPE];
    shiftADCB = shift[B][NRST_BALANCE_ADC_TYPE];
}

DEF_CHOICE_3
(
    cADC_Balance_Mode, pppADC_Balance,
    NRST_BALANCE_ADC_TYPE, FuncActive, OnChanged_ADC_Balance_Mode, Draw_ADC_Balance_Mode,
    "Ðåæèì", "Mode",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    "Ðåàëüíûé", "Real",
    "Ðó÷íîé",   "Manual"
);

//------------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ñìåùåíèå 1 ---
static bool IsActive_ADC_Balance_ShiftAB(void)
{
    return NRST_BALANCE_ADC_TYPE_IS_HAND;
}

static void OnChanged_ADC_Balance_ShiftA(void)
{
    NRST_BALANCE_ADC_A = shiftADCA;
}

DEF_GOVERNOR
(
    gADC_Balance_ShiftA,
    "Ñìåùåíèå 1", "Offset 1",
    "",
    "",
    pppADC_Balance, shiftADCA, -125, 125, IsActive_ADC_Balance_ShiftAB, OnChanged_ADC_Balance_ShiftA, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÀÖÏ - ÁÀËÀÍÑ - Ñìåùåíèå 2 ---
static void OnChanged_ADC_Balance_ShiftB(void)
{
    NRST_BALANCE_ADC_B = shiftADCB;
}

DEF_GOVERNOR
(
    gADC_Balance_ShiftB,
    "Ñìåùåíèå 2", "Offset 2",
    "",
    "",
    pppADC_Balance, shiftADCB, -125, 125, IsActive_ADC_Balance_ShiftAB, OnChanged_ADC_Balance_ShiftB, FuncBeforeDraw
);

static const Choice emptyChoice = {Item_Choice};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ ///
DEF_PAGE_15(    pppADC_Stretch, static,
    Page_Debug_ADC_Stretch, &ppADC, FuncActive, EmptyPressPage,
    "ÐÀÑÒßÆÊÀ", "STRETCH",
    "Óñòàíàâëèâàåò ðåæèì è âåëè÷èíó ðàñòÿæêè (äëÿ ðó÷íîãî ðåæèìà)",
    "Sets mode and the value of stretching (manual mode)",
    cADC_Stretch_Mode,      // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðåæèì
    gADC_Stretch_A,         // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðàñòÿæêà 1ê
    gADC_Stretch_B,         // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðàñòÿæêà 2ê
    emptyChoice,
    emptyChoice,
    gADC_Stretch_Ak20mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 20ìÂ/1Â 1ê
    gADC_Stretch_Ak50mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 50ìÂ 1ê 
    gADC_Stretch_Ak100mV,   // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 100ìÂ/5Â 1ê
    gADC_Stretch_Ak2V,      // ÎÒËÀÄÊÀ - AÖÏ - ÐÀÑÒßÆÊÀ - 2Â 1ê
    emptyChoice,
    gADC_Stretch_Bk20mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 20ìÂ/1Â 2ê
    gADC_Stretch_Bk50mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 50ìÂ 2ê 
    gADC_Stretch_Bk100mV,   // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 100ìÂ/5Â 2ê
    gADC_Stretch_Bk2V,      // ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 2Â 2ê
    emptyChoice
);

//--------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðåæèì ---
static int16 stretchA;
static int16 stretchB;  

void OnChanged_ADC_Stretch_Mode(bool)
{
    if (NRST_STRETCH_ADC_TYPE_IS_DISABLE)
    {
        stretchA = NRST_STRETCH_ADC_A(StretchADC_Disable) = 0;
        stretchB = NRST_STRETCH_ADC_B(StretchADC_Disable) = 0;
    }
    else
    {
        stretchA = NRST_STRETCH_ADC_A(NRST_STRETCH_ADC_TYPE);
        stretchB = NRST_STRETCH_ADC_B(NRST_STRETCH_ADC_TYPE);
    }
}

DEF_CHOICE_3
(
    cADC_Stretch_Mode, pppADC_Stretch,
    NRST_STRETCH_ADC_TYPE, FuncActive, OnChanged_ADC_Stretch_Mode, FuncDraw,
    "Ðåæèì", "Mode",
    "",
    "",
    DISABLE_RU, DISABLE_EN,
    "Ðåàëüíûé", "Real",
    "Ðó÷íîé",   "Manual"
);

//--------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðàñòÿæêà 1ê ---
static bool IsActive_ADC_StretchAB(void)
{
    return NRST_STRETCH_ADC_TYPE_IS_HAND;
}

static void OnChanged_ADC_Stretch_A(void)
{
    NRST_STRETCH_ADC_A(NRST_STRETCH_ADC_TYPE) = stretchA;
}

DEF_GOVERNOR
(
    gADC_Stretch_A,
    "Ðàñòÿæêà 1ê", "Stretch 1ch",
    "Çàäà¸ò ðó÷íóþ ðàñòÿæêó ïåðâîãî êàíàëà.\n1 åäèíèöà = 0.0001",
    "Sets the manual stretching of the first channel.\n1 = 0.0001",
    pppADC_Stretch, stretchA, -10000, 10000, IsActive_ADC_StretchAB, OnChanged_ADC_Stretch_A, FuncBeforeDraw
);

//--------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Ðàñòÿæêà 2ê ---
static void OnChanged_ADC_Stretch_B(void)
{
    NRST_STRETCH_ADC_B(NRST_STRETCH_ADC_TYPE) = stretchB;
}

DEF_GOVERNOR
(
    gADC_Stretch_B,
    "Ðàñòÿæêà 2ê", "Stretch 2ch",
    "Çàäà¸ò ðó÷íóþ ðàñòÿæêó âòîðîãî êàíàëà.\n1 åäèíèöà = 0.0001",
    "Sets the manual stretching of the second channel.\n1 = 0.0001",
    pppADC_Stretch, stretchB, -10000, 10000, IsActive_ADC_StretchAB, OnChanged_ADC_Stretch_B, FuncBeforeDraw
);

//---------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 20ìÂ/1Â 1ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Ak20mV,
    "20ìÂ/1Â 1ê", "20mV/1V 1k",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_20mV_A, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 50ìÂ 1ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Ak50mV,
    "50ìÂ 1ê", "50mV 1k",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_50mV_A, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

//--------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 100ìÂ/5Â 1ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Ak100mV,
    "100ìÂ/5Â 1ê", "100mV/5V 1ch",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_100mV_A, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

//--------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 2Â 1ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Ak2V,
    "2Â 1ê", "2V 1ch",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_2V_A, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

//---------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 20ìÂ/1Â 2ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Bk20mV,
    "20ìÂ/1Â 2ê", "20mV/1V 2k",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_20mV_B, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

//---------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - Äîï ñìåù 50ìÂ 2ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Bk50mV,
    "50ìÂ 2ê", "50mV 2k",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_50mV_B, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

//--------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 100ìÂ/5Â 2ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Bk100mV,
    "100ìÂ/5Â 2ê", "100mV/5V 2k",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_100mV_B, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

//--------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÐÀÑÒßÆÊÀ - 2Â 2ê ---
DEF_GOVERNOR
(
    gADC_Stretch_Bk2V,
    "2Â 2ê", "2V 2ch",
    "",
    "",
    pppADC_Stretch, NRST_ADD_STRETCH_2V_B, -10000, 10000, FuncActive, FuncChanged, FuncBeforeDraw
);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ ///
DEF_PAGE_7(     pppADC_Shift, static,
    Page_Debug_ADC_Shift, &ppADC, FuncActive, EmptyPressPage,
    "ÄÎÏ ÑÌÅÙ", "ADD RSHFIT",
    "",
    "",
    bADC_Shift_Reset,   // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñáðîñ
    gADC_Shift_A2mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 2ìÂ ïîñò
    gADC_Shift_B2mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 2ìÂ ïîñò
    gADC_Shift_A5mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 5ìÂ ïîñò
    gADC_Shift_B5mV,    // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 5ìÂ ïîñò
    gADC_Shift_A10mV,   // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 10ìÂ ïîñò
    gADC_Shift_B10mV    // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 10ìÂ ïîñò
);

// ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñáðîñ ------------------------------------------------------------------------------------------------------------------
static void OnPress_ADC_Shift_Reset(void)
{
    for (int ch = 0; ch < 2; ch++)
    {
        for (int range = 0; range < 3; range++)
        {
            RSHIFT_ADD_STABLE(ch, range) = 0;
        }
    }
    FPGA_SetRShift(A, SET_RSHIFT_A);
    FPGA_SetRShift(B, SET_RSHIFT_B);
}

DEF_BUTTON(
    bADC_Shift_Reset,
    "Ñáðîñ", "Reset",
    "",
    "",    
    pppADC_Shift, FuncActive, OnPress_ADC_Shift_Reset, FuncDraw);

//------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 2ìÂ ïîñò ---
static void OnChanged_ADC_Shift_A(void)
{
    FPGA_SetRShift(A, SET_RSHIFT_A);
}

DEF_GOVERNOR
(
    gADC_Shift_A2mV,
    "Ñì 1ê 2ìÂ ïîñò", "Shift 1ch 2mV DC",
    "",
    "",
    pppADC_Shift, RSHIFT_ADD_STABLE_A(Range_2mV), -100, 100, FuncActive, OnChanged_ADC_Shift_A, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 2ìÂ ïîñò ---
static void OnChanged_ADC_Shift_B(void)
{
    FPGA_SetRShift(B, SET_RSHIFT_B);
}

DEF_GOVERNOR
(
    gADC_Shift_B2mV,
    "Ñì 2ê 2ìÂ ïîñò", "Shift 2ch 2mV DC",
    "",
    "",
    pppADC_Shift, RSHIFT_ADD_STABLE_B(Range_2mV), -100, 100, FuncActive, OnChanged_ADC_Shift_B, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 5ìÂ ïîñò ---
DEF_GOVERNOR
(
    gADC_Shift_A5mV,
    "Ñì 1ê 5ìÂ ïîñò", "Shift 1ch 5mV DC",
    "",
    "",
    pppADC_Shift, RSHIFT_ADD_STABLE_A(Range_5mV), -100, 100, FuncActive, OnChanged_ADC_Shift_A, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 5ìÂ ïîñò ---
DEF_GOVERNOR
(
    gADC_Shift_B5mV,
    "Ñì 2ê 5ìÂ ïîñò", "Shift 2ch 5mV DC",
    "",
    "",
    pppADC_Shift, RSHIFT_ADD_STABLE_B(Range_5mV), -100, 100, FuncActive, OnChanged_ADC_Shift_B, FuncBeforeDraw
);

//----------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 1ê 10ìÂ ïîñò ---
DEF_GOVERNOR
(
    gADC_Shift_A10mV,
    "Ñì 1ê 10ìÂ ïîñò", "Shift 1ch 10mV DC",
    "",
    "",
    pppADC_Shift, RSHIFT_ADD_STABLE_A(Range_10mV), -100, 100, FuncActive, OnChanged_ADC_Shift_A, FuncBeforeDraw
);

//----------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ - Ñì 2ê 10ìÂ ïîñò ---
DEF_GOVERNOR
(
    gADC_Shift_B10mV,
    "Ñì 2ê 10ìÂ ïîñò", "Shift 2ch 10mV DC",
    "",
    "",
    pppADC_Shift, RSHIFT_ADD_STABLE_B(Range_10mV), -100, 100, FuncActive, OnChanged_ADC_Shift_B, FuncBeforeDraw
);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ ///
DEF_PAGE_8(     ppRand, static,
    Page_Debug_Rand, &pDebug, FuncActive, EmptyPressPage,
    "ÐÀÍÄ-ÒÎÐ", "RANDOMIZER",
    "",
    "",
    gRand_NumAverage,       // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Óñðåäí.
    gRand_NumSmooth,        // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñãëàæèâàíèå
    gRand_NumMeasures,      // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Âûá-ê/âîðîòà
    cRand_ShowInfo,         // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Èíôîðìàöèÿ
    gRand_ShowStat,         // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñòàòèñòèêà
    gRand_TimeCompensation, // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Êîìïåíñàöèÿ çàäåðæêè
    gRand_AddTimeShift,     // ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñìåùåíèå
    gRand_Pretriggered      // ÎÒËÀÄÊÀ - ÐAÍÄ-ÒÎÐ - Ïðåäçàïóñê
);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÊÀÍÀËÛ ///
DEF_PAGE_2(     ppChannels, static,
    Page_Debug_Channels, &pDebug, FuncActive, EmptyPressPage,
    "ÊÀÍÀËÛ", "CHANNELS",
    "",
    "",
    cChannels_BandwidthA,   // ÎÒËÀÄÊÀ - ÊÀÍÀËÛ - Ïîëîñà 1
    cChannels_BandwidthB    // ÎÒËÀÄÊÀ - ÊÀÍÀËÛ - Ïîëîñà 2
);

//-------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÀÍËÀÛ - Ïîëîñà 1 ---
static void OnChanged_Channels_BandwidthA(bool)
{
    FPGA_SetBandwidth(A);
}

DEF_CHOICE_7
(
    cChannels_BandwidthA, ppChannels,
    BANDWIDTH_DEBUG(A), FuncActive, OnChanged_Channels_BandwidthA, FuncDraw,
    "Ïîëîñà 1", "Bandwidth 1",
    "Çäåñü ìîæíî âûáðàòü ïîëîñó, êîòîðàÿ áóäåò äåéñòâîâàòü â ÊÀÍÀË1-Ïîëîñà ïðè âûáîðå çíà÷åíèÿ Ïîëíàÿ",
    "Here you can select the bandwidth, which will operate in CHANNEL1-Bandwidth when set to Full",
    "Ïîëíàÿ", "Full",
    "20ÌÃö", "20MHz",
    "100ÌÃö", "100MHz",
    "200ÌÃö", "200MHz",
    "350ÌÃö", "350MHz",
    "650ÌÃö", "650MHz",
    "750ÌÃö", "750MHz"
);

//-------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÊÀÍËÀÛ - Ïîëîñà 2 ---
static void OnChanged_Channels_BandwidthB(bool)
{
    FPGA_SetBandwidth(B);
}

DEF_CHOICE_7
(
    cChannels_BandwidthB, ppChannels,
    BANDWIDTH_DEBUG(B), FuncActive, OnChanged_Channels_BandwidthB, FuncDraw,
    "Ïîëîñà 2", "Bandwidth 2",
    "Çäåñü ìîæíî âûáðàòü ïîëîñó, êîòîðàÿ áóäåò äåéñòâîâàòü â ÊÀÍÀË2-Ïîëîñà ïðè âûáîðå çíà÷åíèÿ Ïîëíàÿ",
    "Here you can select the bandwidth, which will operate in CHANNEL2-Bandwidth when set to Full",
    "Ïîëíàÿ", "Full",
    "20ÌÃö", "20MHz",
    "100ÌÃö", "100MHz",
    "200ÌÃö", "200MHz",
    "350ÌÃö", "350MHz",
    "650ÌÃö", "650MHz",
    "750ÌÃö", "750MHz"
);

//-------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Âûá-ê/âîðîòà ---
static void OnChanged_Rand_NumMeasures(void)
{
    FPGA_SetNumberMeasuresForGates(NUM_MEASURES_FOR_GATES);
}

DEF_GOVERNOR
(
    gRand_NumMeasures,
    "Âûá-ê/âîðîòà", "Samples/gates",
    "",
    "",
    ppRand, NUM_MEASURES_FOR_GATES, 1, 2500, FuncActive, OnChanged_Rand_NumMeasures, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Êîìïåíñàöèÿ çàäåðæêè ---
static void OnChanged_Rand_TimeCompensation(void)
{
    FPGA_SetDeltaTShift(TIME_COMPENSATION);
}

DEF_GOVERNOR
(
    gRand_TimeCompensation,
    "Êîìïåíñàöèÿ çàäåðæêè", "Compenstaion time",
    "Ïîäñòðîéêà êîìïåíñàöèè çàäåðæêè ÀÖÏ 40 íñ",
    "",
    ppRand, TIME_COMPENSATION, 0, 510, FuncActive, OnChanged_Rand_TimeCompensation, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------------------ ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñìåùåíèå ---
static void OnChanged_Rand_AddTimeShift(void)
{
    FPGA_SetTShift(SET_TSHIFT);
}

int16 addShift = 0;

DEF_GOVERNOR
(
    gRand_AddTimeShift,
    "Äîï ñìåùåíèå", "Add shift",
    "Äîáàâî÷íîå ñìùåíèå ïðè âðàùåíèè tShift",
    "",
    ppRand, addShift, -100, 100, FuncActive, OnChanged_Rand_AddTimeShift, FuncBeforeDraw
);

//---------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ïðåäçàïóñê ---
static void OnChanged_Rand_Pretriggered(void)
{
    LoadTShift();
}

DEF_GOVERNOR
(
    gRand_Pretriggered,
    "Ïðåäçàïóñê", "Pretiggered",
    "Âåëè÷èíà ïðåäçàïóñêà, êîòîðàÿ ïèøåòñÿ â ðàíäîìèçàòîð",
    "",
    ppRand, PRETRIGGERED, 0, 30000, FuncActive, OnChanged_Rand_Pretriggered, FuncBeforeDraw
);

//------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Óñðåäí. ---
DEF_GOVERNOR
(
    gRand_NumAverage,
    "Óñðåäí.", "Average",
    "",
    "",
    ppRand, NRST_NUM_AVE_FOR_RAND, 1, 32, FuncActive, FuncChanged, FuncBeforeDraw
);

//--------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñãëàæèâàíèå ---
DEF_GOVERNOR
(
    gRand_NumSmooth,
    "Ñãëàæèâàíèå", "Smoothing",
    "",
    "",
    ppRand, NRST_NUM_SMOOTH_FOR_RAND, 1, 10, FuncActive, FuncChanged, FuncBeforeDraw
);

//--------------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - Ïðåäçàïóñê ---
static int16 pred;

DEF_GOVERNOR
(
    mgPred,
    "Ïðåäçàïóñê", "",
    "", "",
    pDebug, pred, 0, 15000, FuncActive, OnChanged_Pred, FuncBeforeDraw
);

// ÎÒËÀÄÊÀ - Ïîñëåçàïóñê -----------------------------------------------------------------------------------------------------------------------------
static int16 post;

DEF_GOVERNOR
(
    mgPost,
    "Ïîñëåçàïóñê", "",
    "", "",
    pDebug, post, 0, 15000, FuncActive, OnChanged_Post, FuncBeforeDraw
);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - ÍÀÑÒÐÎÉÊÈ ///
DEF_PAGE_SB(    ppSettings, static,
    PageSB_Debug_Settings, &pDebug, FuncActive,
    OnPress_Settings, EmptyDrawPage, FuncRegSetPage,
    "ÍÀÑÒÐÎÉÊÈ", "SETTINGS",
    "Ïîêàçàòü èíôîðìàöèþ î íàñòðîéêàõ",
    "Show settings information",
    &bSettings_Exit,    // ÎÒËÀÄÊÀ - ÍÀÑÒÐÎÉÊÈ - Âûõîä
    0,
    0,
    0,
    0,
    0
);

//-------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÍÀÑÒÐÎÉÊÈ - Âûõîä ---
static void OnPress_Settings_Exit(void)
{
    display.SetDrawMode(DrawMode_Auto, 0);
}

DEF_SMALL_BUTTON
(
    bSettings_Exit,
    "Âûõîä", "Exit", "Êíîïêà äëÿ âûõîäà â ïðåäûäóùåå ìåíþ", "Button to return to the previous menu",
    ppSettings, FuncActive, OnPress_Settings_Exit, DrawSB_Exit
);

static void DebugShowSetInfo_Draw(void)
{
    painter.BeginScene(gColorBack);
    painter.DrawRectangle(0, 0, 319, 239, gColorFill);

    int x0 = 30;
    int y0 = 25;
    int dY = 10;
    int y = y0 - dY;

#define Y_AND_INCREASE (y += dY, y)
#define DRAW_TEXT(str)                  painter.DrawText(x0, Y_AND_INCREASE, str);
#define DRAW_FORMAT(str, value)         painter.DrawFormatText(x0, Y_AND_INCREASE, str, value)
#define DRAW_FORMAT2(str, val1, val2)   painter.DrawFormatText(x0, Y_AND_INCREASE, str, val1, val2);

    //Painter_DrawFormatText(x0, Y_AND_INCREASE, "Ðàçìåð îñíîâíîé ñòðóêòóðû %d", sizeof(set));
    DRAW_FORMAT("Ðàçìåð îñíîâíîé ñòðóêòóðû : %d", sizeof(set));
    painter.DrawText(x0, Y_AND_INCREASE, "Íåñáðàñûâàåìàÿ ñòðóêòóðà:");
    int x = painter.DrawText(x0, Y_AND_INCREASE, "rShiftAdd :") + 5;

    int ddY = 0;

    for (int type = 0; type < 2; type++)
    {
        for (int ch = 0; ch < 2; ch++)
        {
            for (int range = 0; range < RangeSize; range++)
            {
                painter.DrawFormatText(x + range * 20, y + dY * ddY, "%d", NRST_RSHIFT_ADD(ch, range, type));
            }
            ddY++;
        }
    }

    y += dY * 3;

    DRAW_FORMAT("correctionTime : %d", NRST_CORRECTION_TIME);
    DRAW_FORMAT2("balanceADC : %d %d", NRST_BALANCE_ADC_A, NRST_BALANCE_ADC_B);
    DRAW_FORMAT("numAveForRand : %d", NRST_NUM_AVE_FOR_RAND);

    pString s[3] = {"âûêëþ÷åíî", "íàñòðîåíî àâòîìàòè÷åñêè", "çàäàíî âðó÷íóþ"};
    DRAW_FORMAT("balanceADCtype : %s", (NRST_BALANCE_ADC_TYPE < 3 ? s[NRST_BALANCE_ADC_TYPE] : "!!! íåïðàâèëüíîå çíà÷åíèå !!!"));
    DRAW_FORMAT("stretchADCtype : %s", (NRST_STRETCH_ADC_TYPE < 3 ? s[NRST_STRETCH_ADC_TYPE] : "!!! íåïðàâèëüíîå çíà÷åíèå !!!"));
  
    x = painter.DrawText(x0, Y_AND_INCREASE, "stretchADC :") + 5;

    for (int ch = 0; ch < 2; ch++)
    {
        for (int num = 0; num < 3; num++)
        {
            painter.DrawFormatText(x + num * 20, y + dY * ch, "%d", NRST_STRETCH_ADC(ch, num));
        }
    }

    y += dY;

#define DRAW_STRETCH(name) DRAW_FORMAT2(#name " : %d %d", set.nrst_##name[0], set.nrst_##name[1])

    DRAW_STRETCH(AddStretch20mV);
    DRAW_STRETCH(AddStretch50mV);
    DRAW_STRETCH(AddStretch100mV);
    DRAW_STRETCH(AddStretch2V);

    DRAW_FORMAT("numSmoothForRand : %d", NRST_NUM_SMOOTH_FOR_RAND);

    Menu_Draw();
    painter.EndScene();
}

static void OnPress_Settings(void)
{
    display.SetDrawMode(DrawMode_Auto, DebugShowSetInfo_Draw);
}

static void OnChanged_Pred(void)
{
    gPred = ~pred;
    static char buffer[30];
    LOG_WRITE("pred %d %s", pred, strUtils.Hex16toString((uint16)gPred, buffer));
}

static void OnChanged_Post(void)
{
    gPost = (uint16)~post;
    static char buffer[30];
    LOG_WRITE("post %d %s", post, strUtils.Hex16toString(gPost, buffer));
}

//---------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Èíôîðìàöèÿ ---
DEF_CHOICE_2
(
    cRand_ShowInfo, ppRand,
    SHOW_RAND_INFO, FuncActive, FuncChangedChoice, FuncDraw,
    "Èíôîðìàöèÿ", "Information",
    "Ïîêàçûâàòü èíôîðìàöèþ î âîðîòàõ ðàíäîìèçàòîðà",
    "To show information on randomizer gate",
    "Íå ïîêàçûâàòü", "Hide",
    "Ïîêàçûâàòü",    "Show"
);

//---------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - ÐÀÍÄ-ÒÎÐ - Ñòàòèñòèêà ---
DEF_CHOICE_2
(
    gRand_ShowStat, ppRand,
    SHOW_RAND_STAT, FuncActive, FuncChangedChoice, FuncDraw,
    "Ñòàòèñòèêà", "Statistics",
    "Ïîêàçûâàòü ãðàôèê ñòàòèñòèêè",
    "Statistics show schedule",
    "Íå ïîêàçûâàòü", "Hide",
    "Ïîêàçûâàòü",    "Show"
);

//---------------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - Ðåæèì ÝÌÑ ---
static void OnChanged_EMS(bool)
{
    FPGA_SetBandwidth(A);
    FPGA_SetBandwidth(B);
}

DEF_CHOICE_2
(
    cEMS, pDebug,
    MODE_EMS, FuncActive, OnChanged_EMS, FuncDraw,
    "Ðåæèì ÝÌÑ", "EMS mode",
    "Ïðèíóäèòåëüíî âêëþ÷àåò ôèëüòð 20ÌÃö, ñãëàæèâàíèå ïî 4-ì òî÷êàì, óñðåäíåíèå ïî 8-ìè òî÷êàì",
    "",
    DISABLE_RU, DISABLE_EN,
    ENABLE_RU,  ENABLE_EN
);

//--------------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - Îðèåíòàöèÿ ---
void OnChanged_DisplayOrientation(bool)
{
    display.SetOrientation(DISPLAY_ORIENTATION);
}

DEF_CHOICE_2
(
    cDisplayOrientation, pDebug,
    DISPLAY_ORIENTATION, FuncActive, OnChanged_DisplayOrientation, FuncDraw,
    "Îðèåíòàöèÿ", "DisplayOrientation",
    "Óñòàíàâëèâàåò îðèåíòàöèþ äèñïëåÿ",
    "Sets display orientation",
    "Ïðÿìàÿ",   "Direct",
    "Îáðàòíàÿ", "Back"
);

//--------------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - Ñòàòèñòèêà ---
DEF_CHOICE_2
(
    cStats, pDebug,
    SHOW_STAT, FuncActive, FuncChangedChoice, FuncDraw,
    "Ñòàòèñòèêà", "Statistics",
    "Ïîêàçûâàòü/íå ïîêàçûâàòü âðåìÿ/êàäð, êàäðîâ â ñåêóíäó, êîëè÷åñòâî ñèãíàëîâ ñ ïîñëåäíèìè íàñòðîéêàìè â ïàìÿòè/êîëè÷åñòâî ñîõðàíÿåìûõ â ïàìÿòè ñèãíàëîâ",
    "To show/not to show a time/shot, frames per second, quantity of signals with the last settings in memory/quantity of the signals kept in memory",
    "Íå ïîêàçûâàòü", "Hide",
    "Ïîêàçûâàòü",    "Show"
);

// ÎÒËÀÄÊÀ - Ñîõð. ïðîøèâêó --------------------------------------------------------------------------------------------------------------------------
DEF_BUTTON(
    bSaveFirmware,
    "Ñîõð. ïðîøèâêó", "Save firmware",
    "Ñîõðàíåíèå ïðîøèâêè - ñåêòîðîâ 5, 6, 7 îáùèì îáú¸ìîì 3 õ 128 êÁ, ãäå õðàíèòñÿ ïðîãðàììà",
    "Saving firmware - sectors 5, 6, 7 with a total size of 3 x 128 kB, where the program is stored",
    pDebug, IsActive_SaveFirmware, OnPress_SaveFirmware, FuncDraw);

static bool IsActive_SaveFirmware(void)
{
    return FDRIVE_IS_CONNECTED;
}

static void OnPress_SaveFirmware(void)
{
    display.FuncOnWaitStart(DICT(DSaveFirmware), false);

    StructForWrite structForWrite;

    FDrive_OpenNewFileForWrite("S8-54.bin", &structForWrite);

    uint8 *address = (uint8 *)0x08020000;
    uint8 *endAddress = address + 128 * 1024 * 3;

    int sizeBlock = 512;

    while (address < endAddress)
    {
        FDrive_WriteToFile(address, sizeBlock, &structForWrite);
        address += sizeBlock;
    }

    FDrive_CloseFile(&structForWrite);

    display.FuncOnWaitStop();

    display.ShowWarning(FirmwareSaved);
}

// ÎÒËÀÄÊÀ - Ñòåðåòü äàííûå --------------------------------------------------------------------------------------------------------------------------
DEF_BUTTON(
    bEraseData,
    "Ñòåðåòü äàííå", "Erase data",
    "Ñòèðàåò ñîõðàí¸ííûå äàííûå èç ÏÏÇÓ",
    "Erase all saved datas from EEPROM",
    pDebug, FuncActive, OnPress_EraseData, FuncDraw);

static void OnPress_EraseData(void)
{
    display.FuncOnWaitStart(DICT(DDeleteFromMemory), false);
    FLASH_DeleteAllData();
    display.FuncOnWaitStop();
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ÎÒËÀÄÊÀ - Ñ/Í ///
DEF_PAGE_SB(    ppSerialNumber, static,
    PageSB_Debug_SerialNumber, &pDebug, FuncActive,
    OnPress_SerialNumber, EmptyDrawPage, OnRegSet_SerialNumber,
    "Ñ/Í", "S/N",
    "Çàïèñü ñåðèéíîãî íîìåðà â OTP-ïàìÿòü. ÂÍÈÌÀÍÈÅ!!! ÎÒP-ïàìÿòü - ïàìÿòü ñ îäíîêðàòíîé çàïèñüþ.",
    "Serial number recording in OTP-memory. ATTENTION!!! OTP memory is a one-time programming memory.",
    &bSerialNumber_Exit,    // ÎÒËÀÄÊÀ - Ñ/Í - Âûõîä
    &bSerialNumber_Change,  // ÎÒËÀÄÊÀ - Ñ/Í - Ïåðåéòè
    0,
    0,
    0,
    &bSerialNumber_Save     // ÎÒËÀÄÊÀ - Ñ/Í - Ñîõðàíèòü
);

static void OnPress_SerialNumber(void)
{
    display.SetAddDrawFunction(Draw_EnterSerialNumber);
    MALLOC_EXTRAMEM(StructForSN, s);
    s->number = 01;
    s->year = 2017;
    s->curDigt = 0;
}

static void Draw_EnterSerialNumber(void)
{
    int x0 = grid.Left() + 40;
    int y0 = GRID_TOP + 20;
    int width = grid.Width() - 80;
    int height = 160;

    painter.DrawRectangle(x0, y0, width, height, gColorFill);
    painter.FillRegion(x0 + 1, y0 + 1, width - 2, height - 2, gColorBack);

    int deltaX = 10;

    ACCESS_EXTRAMEM(StructForSN, s);
    
    bool selNumber = s->curDigt == 0;

    char buffer[20];
    snprintf(buffer, 19, "%02d", s->number);

    Color colorText = gColorFill;
    Color colorBackground = gColorBack;

    if (selNumber)
    {
        colorText = Color::FLASH_01;
        colorBackground = Color::FLASH_10;
    }

    int y = y0 + 50;

    painter.SetColor(colorText);
    int x = painter.DrawTextOnBackground(x0 + deltaX, y, buffer, colorBackground);

    colorText = Color::FLASH_01;
    colorBackground = Color::FLASH_10;

    if (selNumber)
    {
        colorText = gColorFill;
        colorBackground = gColorBack;
    }

    snprintf(buffer, 19, "%04d", s->year);

    painter.SetColor(colorText);
    painter.DrawTextOnBackground(x + 5, y, buffer, colorBackground);

    // Òåïåðü âûâåäåì èíôîðìàöèþ îá îñòàâøåìñÿ ìåñòå â OTP-ïàìÿòè äëÿ çàïèñè

    int allShots = OTP_GetSerialNumber(buffer);

    painter.DrawFormText(x0 + deltaX, y0 + 130, gColorFill, "Òåêóùèé ñîõðàí¸ííûé íîìåð %s", buffer[0] == 0 ? "-- ----" : buffer);

    painter.DrawFormText(x0 + deltaX, y0 + 100, gColorFill, "Îñòàëîñü ìåñòà äëÿ %d ïîïûòîê", allShots);
}

static void OnRegSet_SerialNumber(int angle)
{
    typedef int (*pFunc)(int *, int, int);

    pFuncMathPIII p = (angle > 0) ? (&Math::CircleIncrease<int>) : (&Math::CircleDecrease<int>);

    ACCESS_EXTRAMEM(StructForSN, s);

    if (s->curDigt == 0)
    {
        (math.*p)(&s->number, 1, 99);
    }
    else
    {
        (math.*p)(&s->year, 2016, 2050);
    }
    Sound_GovernorChangedValue();
}

//-------------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - Ñ/Í - Âûõîä ---
static void OnPress_SerialNumber_Exit(void)
{
    OnPressSB_Exit();
    FREE_EXTRAMEM();
}

DEF_SMALL_BUTTON
(
    bSerialNumber_Exit,
    "Âûõîä", "Exit", "Êíîïêà äëÿ âûõîäà â ïðåäûäóùåå ìåíþ", "Button to return to the previous menu",
    ppSerialNumber, FuncActive, OnPress_SerialNumber_Exit, DrawSB_Exit
);


//----------------------------------------------------------------------------------------------------------------------- ÎÒËÀÄÊÀ - Ñ/Í - Âñòàâèòü ---
static void OnPress_SerialNumber_Change(void)
{
    ACCESS_EXTRAMEM(StructForSN, s);
    ++s->curDigt;
    s->curDigt %= 2;
    painter.ResetFlash();
}

static void Draw_SerialNumber_Change(int x, int y)
{
    painter.SetFont(TypeFont_UGO2);
    painter.Draw4SymbolsInRect(x + 2, y + 2, SYMBOL_TAB);
    painter.SetFont(TypeFont_8);
}

DEF_SMALL_BUTTON
(
    bSerialNumber_Change,
    "Âñòàâèòü", "Insert",
    "Âñòàâëÿåò âûáðàíûé ñèìâîë",
    "Inserts the chosen symbol",
    ppSerialNumber, FuncActive, OnPress_SerialNumber_Change, Draw_SerialNumber_Change
);

// ÎÒËÀÄÊÀ - Ñ/Í - Ñîõðàíèòü -------------------------------------------------------------------------------------------------------------------------
DEF_SMALL_BUTTON
(
    bSerialNumber_Save,
    "Ñîõðàíèòü", "Save",
    "Çàïèñûâàåò ñåðèéíûé íîìåð â OTP",
    "Records the serial number in OTP",
    ppSerialNumber, FuncActive, OnPress_SerialNumber_Save, Draw_SerialNumber_Save
);

static void OnPress_SerialNumber_Save(void)
{
    ACCESS_EXTRAMEM(StructForSN, s);

    char stringSN[20];

    snprintf(stringSN, 19, "%02d %04d", s->number, s->year);

    if (!OTP_SaveSerialNumber(stringSN))
    {
        display.ShowWarning(FullyCompletedOTP);
    }
}

static void Draw_SerialNumber_Save(int x, int y)
{
    painter.SetFont(TypeFont_UGO2);
    painter.Draw4SymbolsInRect(x + 2, y + 1, SYMBOL_SAVE_TO_MEM);
    painter.SetFont(TypeFont_8);
}


































/*
void OnPressDebugDisable(void)
{
    ShowMenu(false);
    SetMenuPageDebugActive(false);
    SetMenuPosActItem(Page_Main, 0);
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
void OnDegubConsoleViewChanged(bool active)
{
    display.SetPauseForConsole(CONSOLE_IN_PAUSE);
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
void OnPressDebugConsoleUp(void)
{
    display.OneStringUp();
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
void OnPressDebugConsoleDown(void)
{
    display.OneStringDown();
}

        /// ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ. ÑÌÅÙ. ÏÀÌ. - Âåëè÷èíà
        const Governor mgDebugADCaltShift =
        {
            Item_Governor, &mspDebugADCaltShift,
            {
                "Âåëè÷èíà", "Value"
            },
            {
                "",
                ""
            },
            0,
            &set.debug.altShift, -2, 2, 0
        };

bool sIsShowReg_RShift1(void)
{
    return set.debug.showRegisters.rShiftB || set.debug.showRegisters.all;
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
bool sIsShowReg_TrigLev(void)
{
    return set.debug.showRegisters.trigLev || set.debug.showRegisters.all;
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
bool sIsShowReg_Range(Channel ch)
{
    return set.debug.showRegisters.range[ch] || set.debug.showRegisters.all;
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
bool sIsShowReg_TrigParam(void)
{
    return set.debug.showRegisters.trigParam || set.debug.showRegisters.all;
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
bool sIsShowReg_ChanParam(Channel ch)
{
    return set.debug.showRegisters.chanParam[ch] || set.debug.showRegisters.all;
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
bool sIsShowReg_TShift(void)
{
    return set.debug.showRegisters.tShift || set.debug.showRegisters.all;
}


//------------------------------------------------------------------------------------------------------------------------------------------------------
bool sIsShowReg_TBase(void)
{
    return set.debug.showRegisters.tBase || set.debug.showRegisters.all;
}


const Page mspDebugADCaltShift =    // ÎÒËÀÄÊÀ - ÀÖÏ - ÄÎÏ ÑÌÅÙ ÏÀÌ
{
    Item_Page, &ppADC,
    {
        "ÄÎÏ ÑÌÅÙ ÏÀÌ", "ALT SHIFT MEM"
    },
    {
        "",
        ""
    },
    0, Page_Debug_ADC_AltShift,
    {
        (void *)&mgDebugADCaltShift
    }
};
*/
